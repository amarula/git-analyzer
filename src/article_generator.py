import datetime
from datetime import datetime

def generate_article_content(commit_data: list[dict], months_back: int) -> str:
    """
    Generates a blog article based on commit data.
    In a real tool, this would call a large language model API (e.g., Gemini).

    Args:
        commit_data: Structured commit data.
        months_back: The number of months the analysis covered.

    Returns:
        A string containing the blog article.
    """
    if not commit_data:
        return "No relevant commits found to generate an article."

    today = datetime.now()
    article_content = f"""
# Today {today.strftime('%Y-%m-%d')} Developments: A Look at Our Codebase ({months_back} Months Review)

We're excited to share a summary of the significant progress made across our repositories in the last {months_back} months. Our dedicated team has been busy pushing new features, refining existing functionalities, and enhancing the overall stability of our products.

Here's a breakdown of key contributions by repository:

"""

    for repo in commit_data:

        if "error" in repo or not repo["commits"]:
            continue

        article_content += f"## {repo['repo_name']}\n\n"
        article_content += f"Repository URL: {repo['repo_url']}\n\n"

        article_content += "Our team has made the following notable commits:\n\n"
        for commit in repo["commits"]:
            # Ensure the message is handled, even if it's empty or malformed
            first_line_message = (
                commit["message"].split("\n")[0]
                if commit["message"]
                else "(No message)"
            )
            first_line_message = first_line_message.replace("_", r"\_")
            article_content += f"- **{commit['author_name']}** on {commit['date'].split('T')[0]}: {first_line_message}\n"

        article_content += "\n"

    article_content += """
This overview highlights the continuous effort and innovation from our development team. We look forward to bringing even more exciting updates in the future!

---
*Generated by the Git Commit Article Generator*
"""
    return article_content
